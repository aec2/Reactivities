let leaveForToday = null;
let remainingTimer = null;

function minutesUntil(leaveHHmm) {
  if (!leaveHHmm) return null;
  const [lh, lm] = leaveHHmm.split(':').map(Number);
  const now = new Date();
  const leave = new Date(now);
  leave.setHours(lh, lm, 0, 0);
  // if leave time has already passed today, delta is negative
  return Math.round((leave - now) / 60000);
}

function formatRemaining(mins) {
  if (mins == null) return '';
  if (mins <= 0) return '0m';
  const h = Math.floor(mins / 60);
  const m = mins % 60;
  return h > 0 ? `${h}h ${m}m` : `${m}m`;
}

function refreshTrayRemaining(start, leave) {
  if (!tray) return;
  const mins = minutesUntil(leave);
  const remaining = formatRemaining(mins);
  // show remaining in tooltip (works on Windows/macOS/Linux)
  tray.setToolTip(`Start: ${start}  â†’  Leave: ${leave}\nRemaining: ${remaining}`);
  // show remaining next to the icon where supported (macOS title; mostly ignored on Windows)
  try { tray.setTitle?.(` ${remaining}`); } catch {}
}ipcMain.on('update-leave-time', (_evt, payload) => {
  const { start, leave } = payload || {};
  if (!start || !leave) return;

  leaveForToday = leave;

  // Update immediately
  refreshTrayRemaining(start, leave);

  // And keep it refreshed every 30s
  if (remainingTimer) clearInterval(remainingTimer);
  remainingTimer = setInterval(() => refreshTrayRemaining(start, leaveForToday), 30 * 1000);
});